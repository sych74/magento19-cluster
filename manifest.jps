{
    "jpsType": "install",
    "description": "Get your highly available and scalable clustered solution for Magento, the extremely popular open source e-commerce platform. This package is designed to ensure the load tracking and distribution, as well as automatic adjusting the amount of allocated resources according to it.",
    "logo": "https://raw.githubusercontent.com/jelastic-jps/magento-cluster/master/images/magento_70x70.png",
    "name": "Magento Cluster Template",
    "nodes": [{
        "image": "jelastic/nginxphp:1.10.1-php-7.0.10",
        "count": 2,
        "cloudlets": 8,
        "nodeGroup": "cp",
        "links": ["sqlbl:DB", "rdc:RDC", "rds:RDS"],
        "volumes": ["/var/www/webroot/ROOT"],
        "displayName": "AppServer",
        "volumeMounts": {
            "/var/www/webroot/ROOT": {
                "readOnly": false,
                "sourcePath": "/var/www/webroot/ROOT",
                "sourceNodeGroup": "admin"
            }
        }
    }, {
        "image": "jelastic/nginxphp:1.10.1-php-7.0.10",
        "cloudlets": 8,
        "nodeGroup": "admin",
        "volumes": ["/var/www/webroot/ROOT"],
        "displayName": "AdminNode"
    }, {
        "image": "devbeta/mysql:5.7-latest",
        "count": 2,
        "cloudlets": 8,
        "nodeGroup": "sqldb",
        "displayName": "Database"
    }, {
        "image": "devbeta/proxysql",
        "cloudlets": 8,
        "nodeGroup": "sqlbl"
    }, {
        "image": "jelastic/varnish:4.1.5",
        "cloudlets": 8,
        "count": 1,
        "nodeGroup": "bl",
        "displayName": "Balancer"
    }, {
        "image": "redis",
        "cloudlets": 8,
        "nodeGroup": "rdc",
        "displayName": "Redis cache"
    }, {
        "image": "redis",
        "cloudlets": 8,
        "nodeGroup": "rds",
        "displayName": "Redis storage"
    }],
    "globals": {
        "PATH": "https://raw.githubusercontent.com/sych74/magento19-cluster/dev",
        "MAGENTO_VERSION": "1.9.3.3",
        "MAGE_ROOT": "/var/www/webroot/ROOT",
        "DB_USER": "jelastic-${fn.random}",
        "DB_PASS": "${fn.password(20)}",
        "DB_NAME": "magento",
        "ADMIN_PASSWD": "${fn.password(10)}"
    },
    "success": "Below you will find your admin panel link, username and password.</br></br> <table style='font-size:13px; border: none;'><tr><td>Admin panel URL:</td><td style='padding-left: 10px;'><a href='${env.protocol}://${env.domain}/admin/' target='_blank'>${env.protocol}://${env.domain}/admin/</a></td></tr>  <tr><td>Admin name:</td><td style='padding-left: 10px;'>admin</td></tr><tr><td>Password:</td><td style='padding-left: 10px;'>${globals.ADMIN_PASSWD}</td></tr></table></br>To add custom domain name for your Magento Cluster installation follow the steps described in our <a href='http://docs.jelastic.com/custom-domains' target='_blank'>documentation</a>",
    "onInstall": [{
        "log": "Auto Scaling Triggers"
    }, {
        "script": "https://raw.githubusercontent.com/jelastic-jps/magento-cluster/master/scripts/addTriggers.js"
    }, {
        "log": "DB Cluster Setup"
    }, {
        "installJps": {
            "jps": "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/orchestrator1/scripts/cluster-configuration.jps",
            "settings": {
                "db_user": "${globals.DB_USER}",
                "db_pass": "${globals.DB_PASS}"
            }
        }
    }, {
        "log": "ProxySQL Setup"
    }, {
        "installJps": {
            "jps": "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/orchestrator1/scripts/proxy-configuration.jps",
            "settings": {
                "db_user": "${globals.DB_USER}",
                "db_pass": "${globals.DB_PASS}",
                "proxy_ng": "sqlbl"
            }
        }
    }, {
        "log": "Orchestrator Setup"
    }, {
        "installJps": {
            "jps": "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/orchestrator1/scripts/orchestrator-configuration.jps",
            "settings": {
                "db_user": "${globals.DB_USER}",
                "db_pass": "${globals.DB_PASS}",
                "proxy_ng": "sqlbl"
            }
        }
    }, {
        "forEach(nodes.bl)": {
            "setupBLNode": {
                "filter": "${@i.id}",
                "intIP": "${@i.intIP}"
            }
        }
    }, {
        "log": "Downloading, Unpacking, Installation and Patching Magento"
    }, {
        "cmd[admin]": [
            "wget ${globals.PATH}/configs/nginx/nginx.conf -O /etc/nginx/nginx.conf && wget ${globals.PATH}/configs/nginx/site-default.conf -O /etc/nginx/conf.d/site-default.conf",
            "wget -qO- 'https://codeload.github.com/OpenMage/magento-mirror/tar.gz/${globals.MAGENTO_VERSION}' | tar xz -C /tmp",
            "mv /tmp/magento-mirror-${globals.MAGENTO_VERSION}/* /tmp/magento-mirror-${globals.MAGENTO_VERSION}/.htaccess ${globals.MAGE_ROOT}",
            "wget ${globals.PATH}/configs/varnish/varnish-probe.php -O ${globals.MAGE_ROOT}/varnish-probe.php",
            "wget ${globals.PATH}/configs/magento/local.xml.template -O ${globals.MAGE_ROOT}/app/etc/local.xml.template",
            "wget -O - ${globals.PATH}/scripts/setupMG.sh ${globals.DB_USER} ${globals.DB_PASS} ${nodes.sqlbl.intIP} ${globals.DB_NAME} ${globals.ADMIN_PASSWD} ${globals.MAGE_ROOT} ${env.url} ${user.email} | bash",
            "chown nginx:nginx -R ${globals.MAGE_ROOT}/*",
            "service nginx restart"
        ]
    }, {
        "forEach(nodes.cp)": {
            "setupCPNode": {
                "filter": "${@i.id}",
                "intIP": "${@i.intIP}"
            }
        }
    }],
    "onAfterScaleOut[nodeGroup:cp]": [{
        "forEach(event.response.nodes)": {
            "setupCPNode": {
                "filter": "${@i.id}",
                "intIP": "${@i.intIP}"
            }
        }
    }],
    "onBeforeScaleIn[nodeGroup:cp]": {
        "forEach(event.response.nodes)": {
            "removeCPNode": {
                "intIP": "${@i.intIP}"
            }
        }
    },
    "actions": {
        "setupCPNode": [{
            "cmd[${this.filter}]": [
                "wget ${globals.PATH}/configs/nginx/nginx.conf -O /etc/nginx/nginx.conf && wget ${globals.PATH}/configs/nginx/site-default.conf -O /etc/nginx/conf.d/site-default.conf",
                "service nginx restart"
            ]
        }, {
            "cmd[bl]": [
                "jem balancer addCommonHost -h ${this.intIP} ",
                "grep -q \".url = \"/\"\" /etc/varnish/default.vcl ||  sed -ri 's| .url = \"/\"|.url = \"/varnish-probe.php\"|g' /etc/varnish/default.vcl",
                "service varnish reload"
            ]
        }],
        "removeCPNode": {
            "cmd[bl]": [
                "jem balancer RemoveCommonHost -h ${this.intIP}",
                "service varnish reload"
            ]
        },
        "setupBLNode": {
            "cmd[bl]": [
                "wget ${globals.PATH}/scripts/varnish/jem_overrides/varnish_balancer.lib -O /var/lib/jelastic/overrides/varnish_balancer.lib",
                "wget ${globals.PATH}/configs/varnish/default.vcl -O /etc/varnish/default.vcl"
            ]
        }
    }
}
